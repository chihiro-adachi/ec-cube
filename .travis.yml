# for travis-ci
# see also. https://travis-ci.org
git:
  submodules: false

language: php

cache:
  directories:
    - vendor
    - $HOME/.composer/cache
php:
#  - 5.3
#  - 5.4
#  - 5.5
#  - 5.6
  - 7.0
#  - 7.1

matrix:
  fast_finish: true
#  include:
#    - php: 7.0.12 # for coverrage
#      env: DB=pgsql USER=postgres DBNAME=myapp_test DBPASS=password DBUSER=postgres PHP_SAPI=phpdbg
#      sudo: required
#      dist: trusty
#  exclude:
#    - php: 5.3
#      env: DB=pgsql USER=postgres DBNAME=myapp_test DBPASS=password DBUSER=postgres PHP_SAPI=phpdbg
#    - php: 5.4
#      env: DB=pgsql USER=postgres DBNAME=myapp_test DBPASS=password DBUSER=postgres PHP_SAPI=phpdbg
#    - php: 5.5
#      env: DB=pgsql USER=postgres DBNAME=myapp_test DBPASS=password DBUSER=postgres PHP_SAPI=phpdbg
#    - php: 5.6
#      env: DB=pgsql USER=postgres DBNAME=myapp_test DBPASS=password DBUSER=postgres PHP_SAPI=phpdbg
#    - php: 7.0
#      env: DB=pgsql USER=postgres DBNAME=myapp_test DBPASS=password DBUSER=postgres PHP_SAPI=phpdbg
#    - php: 7.1
#      env: DB=pgsql USER=postgres DBNAME=myapp_test DBPASS=password DBUSER=postgres PHP_SAPI=phpdbg
#  allow_failures:
#    - env: DB=sqlite
#    - php: 7.1
#    - php: 7.0.12 # dist: trusty を動かすためのダミー. 実際にテストは実行されない
#      env: DB=pgsql USER=postgres DBNAME=myapp_test DBPASS=password DBUSER=postgres PHP_SAPI=phpdbg

env:
  - DB=mysql USER=root DBNAME=myapp_test DBPASS=' ' DBUSER=root
#  - DB=pgsql USER=postgres DBNAME=myapp_test DBPASS=password DBUSER=postgres
#  - DB=pgsql USER=postgres DBNAME=myapp_test DBPASS=password DBUSER=postgres PHP_SAPI=phpdbg
#  - DB=sqlite

install:
  - gem install mime-types -v 2.99.1
  - gem install mailcatcher

before_script:
  - CODENAME=$(lsb_release -c -s)
  - if [[ $PHP_SAPI != 'phpdbg' ]] || [[ $CODENAME = 'trusty' ]]; then phpenv config-rm xdebug.ini ; fi
  - if [[ $PHP_SAPI = 'phpdbg' ]]; then echo "memory_limit=-1" >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini ; fi
  - composer self-update || true
  - composer install --dev --no-interaction -o
  - php ./eccube_install.php $DB none
  - mailcatcher

script: # PHP7 + precise のテストは実行されない
  - if [[ $PHP_SAPI = 'phpdbg' ]] && [[ $CODENAME = 'trusty' ]]; then phpdbg -qrr ./vendor/bin/phpunit --coverage-clover=coverage.clover ; fi
  - if [[ $PHP_SAPI != 'phpdbg' ]]; then phpunit tests/Eccube/Tests/Entity ; fi

#after_script:
#  - if [[ $PHP_SAPI = 'phpdbg' ]]; then wget https://scrutinizer-ci.com/ocular.phar ; fi
#  - if [[ $PHP_SAPI = 'phpdbg' ]]; then php ocular.phar code-coverage:upload --format=php-clover coverage.clover ; fi
#
#after_success:
#  - if [[ $PHP_SAPI = 'phpdbg' ]]; then php vendor/bin/coveralls -v -x coverage.clover ; fi

before_deploy:
  # php7.0 + mysql のmatrixでリリース用パッケージを作成する.
  - if [[ $TRAVIS_PHP_VERSION = '7.0' ]] && [[ $DB = 'mysql' ]]; then sh release.sh ; fi

#deploy:
#  provider: releases
#  api_key:
#    secure: BsPLgFvqn90gKG4se3Hv8/5fY7IacgyJghEZH9/1eLyB2A8gIe5kv6FfMhkAGu0s+Isg7zKFmhpNc1wpf2PXboQ3qvxg0KyxlhHX2O3XB1S0+Bkbm3hqGvJ/1RD86c8siWlcnEQX1fThiuWLSbWqy7zVGQ9xSg+QNorlFVNlkxv1U3cftfHvblJq4fXgrFFxC5bR48bQUTaAQG5+sEeqwQA9f7WGEopG1tNvyTXnJWcGIk1zcmoUn8GvAb53dJFMFEJ7fsE9z0LyWnXn5d4cRjYuomiauLfU/x4xhsLWn657VKANRA/MrHRXVeKsWuJYqYYThwxMZzFp6Wb49mKcH9rq3745ZmiW3S29sxNnX/u/fMB0IIPTLCJYHNw0H3n1XDTRVqUQPX93f8Vz9WHa0Z3LxqvlhqLn5zuNReg8TfvW/oZsoHUV/gr6Zrqrc/FsBanPWz5M6NDm4YPTKcYEX3yT7JDahswGAFUknWgKzz7iDEFRC920BPNwoZ0B647yblMxnM5ZunSFcXLq/3sMrhR5gSXMoz7D2rNbjlDSRbwMumjDhyOYw+vQSRXyhBNiBCYvVeW9j/yIcor7NFKEA176uwsMV0Uej1p1/zyn9cLwROs94+3FesY9KmyYxK9PX9Wle+0kL/aFXyXwBzKVAUnPtcDwRSVM4Zig61e2bxI=
#  skip_cleanup: true
#  file_glob: true
#  file: 'release/*.{tar.gz,zip}'
#  on:
#    repo: chihiro-adachi/ec-cube
#    all_branches: true
#    tags: true

deploy:
  provider: s3
  access_key_id: $AWS_ID
  secret_access_key: $AWS_KEY
  bucket: ca-2017-03-01
#  endpoint: s3-ap-northeast-1.amazonaws.com
  region: ap-northeast-1
  skip_cleanup: true
  local_dir: release/package
  on:
    repo: chihiro-adachi/ec-cube
    all_branches: true
    tags: true
